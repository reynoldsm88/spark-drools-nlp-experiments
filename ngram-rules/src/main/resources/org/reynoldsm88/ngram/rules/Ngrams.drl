package org.reynoldsm88.ngrams;

import java.util.List;
import java.util.regex.Pattern;
import org.reynoldsm88.nlp.model.BiGram;
import org.reynoldsm88.nlp.model.BiGramInstance;
import org.reynoldsm88.nlp.model.Sentence;

rule "Disregard sentences that have http links"
    salience 100
    when
        $sentence : Sentence( text.matches( ".*http(s)?://.*" ) )
    then
        System.out.println( "removing sentences becuase of http links " + $sentence );
        delete( $sentence );
end

rule "Create bi-gram instances for sentences"
    when
        $sentence : Sentence()
    then
        for( BiGramInstance b : $sentence.biGrams() ){
            insert( b );
        }
        delete( $sentence );
end

rule "Count bi-grams"
    when
        BiGramInstance( $root : root, $stem : stem )
        not BiGram( root == $root, $stem == stem )
        accumulate( BiGramInstance( root == $root ); $rootOccurrenceCount : count() )
        accumulate( BiGramInstance( root == $root, stem == $stem ); $instanceCount : count() )
    then
        insert( new BiGram( $root, $stem, $rootOccurrenceCount, $instanceCount ) );
end