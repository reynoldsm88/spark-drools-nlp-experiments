package org.reynoldsm88.ngrams;

import java.util.List;
import java.util.regex.Pattern;
import org.reynoldsm88.nlp.model.BiGram;
import org.reynoldsm88.nlp.model.BiGramOccurrence;
import org.reynoldsm88.nlp.model.Sentence;

rule "Disregard sentences that have http links"
    salience 100
    when
        $sentence : Sentence( text.matches( ".*http(s)?://.*" ) )
    then
        delete( $sentence );
end

rule "Create bi-gram instances for sentences"
    when
        $sentence : Sentence()
    then
        for( BiGramOccurrence b : $sentence.biGrams() ){
            insert( b );
        }
        delete( $sentence );
end

rule "Count bi-grams"
    when
        BiGramOccurrence( $root : root, $stem : stem )
        not BiGram( root == $root, $stem == stem )
        accumulate( BiGramOccurrence( root == $root, stem == $stem ); $count : count() )
    then
        insert( new BiGram( $root, $stem, $count ) );
end